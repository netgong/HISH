
var express = require('express');
var app = express();
var bodyParser = require('body-parser');    //post방식출력위해서 미들웨어 추가
app.locals.pretty = true;   //jade파일 코드 이쁘게 출력
app.set('view engine', 'jade'); //jade템플릿엔진과 express와 연결
app.set('views', './views');    //views라는 디렉토리만들고 jade파일은 views안에 넣어야 함

app.use(express.static('public'));  
app.use(bodyParser.urlencoded({extended: false}));  //bodyParser을 app에 연결, 항상 제일먼저 요청에 대기중임


app.post('/form_receiver', function(req, res){   //form.jade에서 post방식 보낸 데이터 받기. 암시적, 많은데이터가능
    var title = req.body.title;
    var description = req.body.description;
    res.send('post방식: '+title+', '+description);
});

app.get('/form_receiver', function(req, res){   //form.jade에서 get방식 보낸 데이터 받기. url통해 전달,적은데이터만
    var title = req.query.title;
    var description = req.query.description;
    res.send('get방식: '+title+', '+description);
});

app.get('/form', function(req, res){    //form방식 jade불러오기
    res.render('form')
});

app.get('/topic/:id', function(req,res){    
    var topics = [
        'Javascript is...',
        'Nodejs is...',
        'Express is...'
    ];
    // '/topic?id=0'
    var output = `
        <a href="/topic/0">JavaScript</a><br>
        <a href="/topic/1">Nodejs</a><br>
        <a href="/topic/2">Express</a><br><br>
        ${topics[req.params.id]}
    `;      //req.query.id를 하면 사용자가 요청한 id값(쿼리스트링)이 출력 됨.

    res.send(output);
});

app.get('/param/:module_id/:topic_id', function(req,res){
    res.json(req.params);
});


//템플릿엔진 사용해 볼 꺼
app.get('/template', function(req,res){
    res.render('temp', {time:Date(), _title:'Jade'});   //템플릿파일 읽어옴, 두번째 인자로 넘겨줄 인자를 넘겨줌
});

app.get('/', function(req, res){
    res.send('Hello home page');
});

app.get('/dynamic', function(req, res){
    var lis = '';
    for(var i=0; i<5; i++)
    {
        lis = lis + '<li>coading</li>';
    }
    var time = Date();
    var output = `
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title></title>
    </head>
    <body>
        Hello, Dynamic!
        <ul>
        ${lis}
        </ul> 
        ${time} 
    </body>
    </html>`; 
    res.send(output);
});


app.get('/route', function(req, res){
    res.send('Hello Router, <img src="/route.png">')
});

app.get('/login', function(req, res){
    res.send('<h1>Login please</h1>');
});

app.listen(3000, function(){
    console.log('Conneted 3000 port!');
});
