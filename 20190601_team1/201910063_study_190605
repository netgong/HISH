
//배열 선택 1번
//#include<stdio.h>
//int main() {
//	char a[100001], st = 0, ed = 0;	//문자열에 들어갈 수 있는 최대 괄호의 개수가 100000이기 때문에 그보다 한칸많은 100001의 배열 선언, '('의 개수를 카운트 해 줄 st변수와 ')'의 개수를 카운트 해줄 ed변수를 선언하여 0으로 초기화
//	scanf_s("%s", &a, 100001); //문자열 받아옴
//	for (int i = 0; a[i]; ++i) { //입력받은 문자열의 길이 만큼 반복문을 반복
//		if (a[i] == '(') st++;	//조건문을 통해 a의 i번째가 '(' 괄호이면 st를 증가 
//		else ed++;				//반대일 경우 ed를 증가
//	}
//	printf("%d %d", st, ed);	//각 괄호의 개수 출력
//}



////배열 선택 2번
//#include<stdio.h>
//int main() {						//st[index]는 index를 출석번호의 느낌으로, 변수 안의 데이터는 불린 횟수로 사용
//	int st[23] = {0}, k, n, min;	//min은 선생님이 부른 번호들 중 가장 작은 출석번호를 담을 함수
//	scanf_s("%d", &n);				//선생님께서 출석번호를 부를 횟수를 변수 n에 담는다.
//	for (int i = 0; i < n; ++i) {	//n만큼의 반복
//		scanf_s("%d", &k);			//선생님이 출석을 부르면 해당 번호의 학생이 불린 횟수가 1증가
//		st[k - 1]++;
//	}
//
//	for (int j = 0; !(st[j]); ++j)  // 반복문을 빠져나왔을 때는 st[j]가 불렸음을 의미한다.
//		min = j + 1;				//반복문은 st[j]가 0일때까지만 돈다. 따라서 min은 j+1값을 가져야한다.
//
//	printf("%d", min+1);	//min은 st[min]이 1이상인 수 중 가장 빠른 수를 가지고 있지만 0부터 시작하는 배열의 인덱스이기 때문에 다시 +1해준다. 
//}



//배열 선택 2번인데 꼭 배열 사용하지 않아도 될 것 같아서 만든 버전
//#include<stdio.h>
//int main() {
//	int k, n, min = 23;	//min은 가장 작은 수를 담는 변수
//	scanf_s("%d", &n);				//반복할 횟수 입력
//	for (int i = 0; i < n; ++i) {
//		scanf_s("%d", &k);
//		if (min > k) min = k;	//입력받은 k가 min보다 작으면 min에 k값을 대입
//	}
//	printf("%d", min);
//}



//함수 사칙연산
//#include<stdio.h>
//int add(int a, int b) {
//	return a + b;
//}
//int sub(int a, int b) {
//	return a - b;
//}
//int mul(int a, int b) {
//	return a * b;
//}
//int div(int a, int b) {
//	return a / b;
//}
//int mod(int a, int b) {
//	return a % b;
//}
//int main() {
//	int num1, num2, total;
//	char op;
//	scanf_s("%d %c %d", &num1,&op, 1, &num2);	//(숫자)(연산자)(숫자)로 이루어진 식을 입력받는다.
//	switch (op)		//연산자에 따라 구분하여 다른 함수로 이동
//	{
//	case '+':	total = add(num1, num2);  break;
//	case '-':	total = sub(num1, num2);  break;
//	case '*':	total = mul(num1, num2);  break;
//	case '/':	total = div(num1, num2);  break;
//	case '%':	total = mod(num1, num2);  break;
//	default: printf("잘 못 입력하셨습니다.\n");
//	}
//	printf("답 : %d\n", total);						//결과값 출력
//}	


//포인터 swap
//#include<stdio.h>
//void swap(int *pa, int* pb) {	//주소를 담는 변수인 포인터를 선언하여 주소를 담는다.
//	int temp;	//임시로 값을 가지고 있어줄 변수 선언
//	temp = *pa;		//swap
//	*pa = *pb;
//	*pb = temp;
//}
//int main() {
//	int a, b;
//	scanf("%d %d", &a, &b);					
//	printf("a : %d		b : %d\n", a, b);
//	swap(&a, &b);	//메인함수에서 쓰이는 변수를 다른 사용자 정의함수에서 값 변경 시키기 위해서는 주소를 보내야한다.
//	printf("a : %d		b : %d\n", a, b);
//}


//구조체
//#include<stdio.h>
//typedef struct _student {	//구조체로 학생 정보를 담을 구조체변수 선언
//	char name[30];	//해당 학생의 이름
//	int kor, ma, eng;	//각 성적을 입력해줄 변수
//	float ave;	//성적의 평균값을 넣어줄 변수
//}st;	//간편한 선언을 위한 작업 (typedef)
//int main() {
//	st info[3];	//구조체 변수를 배열로 선언하여 사용했다.
//	for (int i = 0; i < 3; ++i) {		//반복문으로 각각을 입력받았다.
//		printf("%d번째 학생의 이름 : ", i + 1);
//		scanf_s("%s", info[i].name, 30);
//		printf("%s 학생의 국어 성적 : ", info[i].name);
//		scanf_s("%d", &info[i].kor);
//		printf("%s 학생의 수학 성적 : ", info[i].name);
//		scanf_s("%d", &info[i].ma);
//		printf("%s 학생의 영어 성적 : ", info[i].name);
//		scanf_s("%d", &info[i].eng);
//		info[i].ave = (float)(info[i].eng + info[i].kor + info[i].ma)/3;	//입력받은 성적들이 int형이기 때문에 평균을 계산하고 형변환 한 다음 ave변수에 넣어주었다.
//		printf("\n");
//	}
//
//	printf("\n\n");
//
//	for (int i = 0; i < 3; ++i) {	//학생의 이름과 평균을 출력해주는 반복문
//		printf("%s 학생의 평균 : %.2f점 \n", info[i].name, info[i].ave);
//	}
//}


//2번배열
//#include<stdio.h>
//int main() {
//	int nemo[100][100], n, cnt=1;		//최대 100*100으로 입력 가능한 이차원 배열의 선언. cnt는 이차원 배열 안에 넣어줄 데이터값
//	scanf("%d", &n);					//사용자가 n을 입력하면 n*n만큼의 배열 공간을 사용하겠다는 의미
//	for (int i = 0; i < n; ++i) {		//사용자가 입력한 값인 n만큼의 반복을 이중으로 하여 가로 세로 채우기
//		for (int j = 0; j < n; ++j){
//			nemo[i][j] = cnt;			//nemo의 i, j 인덱스에 cnt의 값을 넣고 cnt는 1추가
//			printf("%d ", nemo[i][j]);	//출력까지 같이 해준다.
//			cnt++;
//		}
//		printf("\n");
//	}
//}
